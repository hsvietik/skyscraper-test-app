{"version":3,"file":"static/js/504.4f274464.chunk.js","mappings":"4RAGaA,EAAYC,EAAAA,GAAAA,QAAH,0FAKTC,EAAQD,EAAAA,GAAAA,GAAH,oKAMPE,EAAAA,EAAAA,OAEEC,EAAOH,EAAAA,GAAAA,GAAH,gICdJD,EAAYC,EAAAA,GAAAA,IAAH,kFAKTI,EAAYJ,EAAAA,GAAAA,IAAH,sBACTK,EAAeL,EAAAA,GAAAA,IAAH,oHAOZM,EAAYN,EAAAA,GAAAA,GAAH,oJAOTO,EAAWP,EAAAA,GAAAA,IAAH,2HAMRQ,EAAeR,EAAAA,GAAAA,IAAH,uFAMZS,EAAWT,EAAAA,GAAAA,EAAH,iE,UCxBRU,EAAO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACfC,EAAiB,SAAAC,GAErB,OADwB,IAAIC,KAAKC,aAAa,SAASC,OAAOH,EAE/D,EASD,OACE,UAAC,EAAD,YACE,SAACT,EAAD,CAAWa,IAAKN,EAAKO,QAASC,IAAKR,EAAKS,QACxC,UAACf,EAAD,YACE,SAACC,EAAD,UAAYK,EAAKS,QACjB,UAACb,EAAD,YACE,UAACC,EAAD,YACE,UAACC,EAAD,WAAWG,EAAeD,EAAKU,OAA/B,WACA,UAACZ,EAAD,uBAAoBG,EAAeD,EAAKW,QAAxC,cAEF,UAACd,EAAD,YACE,UAACC,EAAD,oBAAiBE,EAAKY,MAAtB,QACA,UAACd,EAAD,wBApBc,SAAAe,GACtB,IAAMC,EAAW,IAAIC,KAAKF,GACpBG,EAAQ,IAAID,KAIlB,OAHyBE,KAAKC,OAC3BJ,EAAWE,GAAZ,MAGH,CAa8BG,CAAgBnB,EAAKc,UAA1C,WAEF,SAACjB,EAAD,WACE,UAACC,EAAD,mBAAgBE,EAAKoB,KAArB,iBAMX,E,s4BC1CM,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,oCADlB,cACCC,EADD,yBAEEA,GAFF,kECMA,IAAMC,EAAY,WACvB,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,OAASH,EAAeI,EAgBnD,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,6GAE2BV,EAAW,CAAC,GAFvC,OAEUE,EAFV,OAGII,EAAgBJ,EAASO,MAH7B,oDAKQ,KAAME,KALd,0CAMaC,EAAAA,GAAAA,MAAA,gCANb,0DADc,uBAAC,WAAD,wBAWdC,EACD,GAAE,KAGD,UAAC9C,EAAD,YACE,SAACE,EAAD,0BACA,SAACE,EAAD,UACGoC,EAAMO,KAAI,SAAAnC,GACT,OACE,yBACE,SAACD,EAAD,CAAMC,KAAMA,KADLA,EAAKoC,GAIjB,OAEH,SAAC,KAAD,MAGL,EC/BD,MARA,WACE,OACE,+BACE,SAACZ,EAAD,KAGL,C","sources":["components/OpenDeals/OpenDeals.styled.jsx","components/Deal/Deal.styled.jsx","components/Deal/Deal.jsx","helpers/fetchDeals.js","components/OpenDeals/OpenDeals.jsx","pages/Skyscrapers.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Colors } from 'helpers/colors';\n\nexport const Container = styled.section`\n  max-width: 1440px;\n  margin: 0px auto;\n  padding: 50px 80px;\n`;\nexport const Title = styled.h2`\n  margin-bottom: 20px;\n  font-family: 'Merriweather', serif;\n  font-size: 28px;\n  font-weight: 700;\n  line-height: 1.21;\n  color: ${Colors.brown};\n`;\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 630px;\n  height: 400px;\n  position: relative;\n`;\nexport const DealImage = styled.img``;\nexport const DealDataWrap = styled.div`\n  position: absolute;\n  width: 100%;\n  padding: 20px 14px;\n  bottom: 0px;\n  left: 0px;\n`;\nexport const DealTitle = styled.h3`\n  margin-bottom: 5px;\n  font-family: 'Merriweather', serif;\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 1.7;\n`;\nexport const DealData = styled.div`\n  display: flex;\n  column-gap: 60px;\n  justify-content: flex-start;\n  align-items: flex-start;\n`;\nexport const DealInfoWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 10px;\n`;\n\nexport const DealInfo = styled.p`\n  font-size: 18px;\n  font-weight: 700;\n`;\n","import {\n  Container,\n  DealDataWrap,\n  DealImage,\n  DealData,\n  DealTitle,\n  DealInfoWrap,\n  DealInfo,\n} from './Deal.styled';\n\nexport const Deal = ({ deal }) => {\n  const toFormatNumber = number => {\n    const formattedNumber = new Intl.NumberFormat('ru-RU').format(number);\n    return formattedNumber;\n  };\n  const toCountDaysLeft = date => {\n    const deadline = new Date(date);\n    const today = new Date();\n    const differenceInDays = Math.floor(\n      (deadline - today) / (1000 * 60 * 60 * 24)\n    );\n    return differenceInDays;\n  };\n  return (\n    <Container>\n      <DealImage src={deal.picture} alt={deal.name} />\n      <DealDataWrap>\n        <DealTitle>{deal.name}</DealTitle>\n        <DealData>\n          <DealInfoWrap>\n            <DealInfo>{toFormatNumber(deal.price)} Dhs</DealInfo>\n            <DealInfo>Ticket - {toFormatNumber(deal.ticket)} Dhs</DealInfo>\n          </DealInfoWrap>\n          <DealInfoWrap>\n            <DealInfo>Yield {deal.yield}%</DealInfo>\n            <DealInfo>Days left {toCountDaysLeft(deal.deadline)} </DealInfo>\n          </DealInfoWrap>\n          <DealInfoWrap>\n            <DealInfo>Sold {deal.sold}%</DealInfo>\n          </DealInfoWrap>\n        </DealData>\n      </DealDataWrap>\n    </Container>\n  );\n};\n","import axios from 'axios';\n\nexport async function fetchDeals() {\n  const response = await axios.get(`http://localhost:3001/skyscraper`);\n  return response;\n}\n","import { useState, useEffect } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { List } from './OpenDeals.styled';\nimport { Deal } from '../Deal/Deal';\nimport data from '../../assets/data';\nimport { Container, Title } from './OpenDeals.styled';\nimport { fetchDeals } from '../../helpers/fetchDeals';\n\nexport const OpenDeals = () => {\n  const [fetchedDeals, setFetchedDeals] = useState([]);\n  const deals = fetchedDeals.length ? fetchedDeals : data;\n\n  useEffect(() => {\n    async function loadDeals() {\n      try {\n        const response = await fetchDeals({});\n        setFetchedDeals(response.data);\n      } catch (error) {\n        if (error.code) {\n          return toast.error(`Oops, something went wrong.`);\n        }\n      }\n    }\n    loadDeals();\n  }, []);\n\n  return (\n    <Container>\n      <Title>Open Deals</Title>\n      <List>\n        {deals.map(deal => {\n          return (\n            <li key={deal.id}>\n              <Deal deal={deal} />\n            </li>\n          );\n        })}\n      </List>\n      <Toaster />\n    </Container>\n  );\n};\n","import { OpenDeals } from '../components/OpenDeals/OpenDeals';\n\nfunction Skyscrapers() {\n  return (\n    <>\n      <OpenDeals />\n    </>\n  );\n}\n\nexport default Skyscrapers;\n"],"names":["Container","styled","Title","Colors","List","DealImage","DealDataWrap","DealTitle","DealData","DealInfoWrap","DealInfo","Deal","deal","toFormatNumber","number","Intl","NumberFormat","format","src","picture","alt","name","price","ticket","yield","date","deadline","Date","today","Math","floor","toCountDaysLeft","sold","fetchDeals","axios","response","OpenDeals","useState","fetchedDeals","setFetchedDeals","deals","length","data","useEffect","code","toast","loadDeals","map","id"],"sourceRoot":""}