{"version":3,"file":"static/js/489.39265fc7.chunk.js","mappings":"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","sources":["components/FormDecor/FormDecor.jsx","components/Forms/Forms.styled.jsx","helpers/validationSchema.js","components/Forms/SignupForm.jsx","pages/Signup.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport backgroundImage from '../../assets/skyscraper-login.jpg';\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst StyledContainer = styled.div`\n  width: 60vw;\n  height: 100vh;\n  background-image: url(${backgroundImage});\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\n\nexport const FormDecor = ({ children }) => {\n  return (\n    <Container>\n      <StyledContainer />\n      {children}\n    </Container>\n  );\n};\n\nexport default FormDecor;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport { Colors } from '../../helpers/colors';\nimport { Transition } from '../../helpers/transition';\n\nexport const Container = styled.section`\n  width: 350px;\n  color: ${Colors.black};\n  margin: 0px auto;\n`;\nexport const Title = styled.h2`\n  margin-bottom: 20px;\n  font-family: 'Merriweather', serif;\n  font-size: 28px;\n  font-weight: 700;\n  line-height: 1.2;\n`;\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  row-gap: 20px;\n  margin-bottom: 10px;\n`;\nexport const InputWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledInput = styled.input`\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.57;\n  padding: 14px 20px;\n  border-radius: 5px;\n  border: none;\n  background-color: ${Colors.grey};\n  &:focus,\n  &:hover {\n    outline: solid 1px ${Colors.brown};\n  }\n`;\nexport const StyledLabel = styled.label`\n  margin-bottom: 10px;\n  font-family: 'Merriweather', serif;\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 1.42;\n`;\nexport const ErrorMessage = styled.p`\n  font-size: 13px;\n`;\n\nexport const ForgotButton = styled(Link)`\n  margin-bottom: 10px;\n  text-align: right;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.57;\n  color: ${Colors.brown};\n`;\n\nexport const FormButton = styled.button`\n  padding: 11px;\n  border-radius: 5px;\n  border: 2px solid ${Colors.brown};\n  outline: none;\n  color: ${Colors.white};\n  font-family: 'Merriweather', serif;\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 1.37;\n  background-color: ${Colors.brown};\n  transition-property: color, background-color;\n  transition-duration: ${Transition.duration};\n  transition-timing-function: ${Transition.transitionTiming};\n  &:focus,\n  &:hover {\n    background-color: ${Colors.black};\n    color: ${Colors.brown};\n  }\n`;\n\nexport const SignWrap = styled.div`\n  display: flex;\n  gap: 3px;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.57;\n  justify-content: center;\n`;\nexport const SignText = styled.p``;\nexport const SignLink = styled(Link)`\n  color: ${Colors.brown};\n`;\n","import * as yup from 'yup';\nexport const registrationSchema = yup\n  .object()\n  .shape({\n    name: yup\n      .string()\n      .matches(\n        /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n        'Name may contain only letters, apostrophe, dash and spaces'\n      )\n      .required('Name is required'),\n    email: yup.string().email('Invalid email').required('Email is required'),\n    password: yup\n      .string()\n      .min(4, 'Password must be at least 4 characters long')\n      .required('Password is required'),\n  })\n  .required();\n\nexport const loginSchema = yup\n  .object()\n  .shape({\n    email: yup.string().email('Invalid email').required('Email is required'),\n    password: yup\n      .string()\n      .min(4, 'Password must be at least 4 characters long')\n      .required('Password is required'),\n  })\n  .required();\n\nexport const contactAddSchema = yup\n  .object()\n  .shape({\n    name: yup\n      .string()\n      .matches(\n        /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n        \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      )\n      .required('Name is required'),\n    number: yup\n      .string()\n      .matches(\n        /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n        'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n      )\n      .required('Number is required'),\n  })\n  .required();\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\n// import { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport toast, { Toaster } from 'react-hot-toast';\nimport {\n  Container,\n  Title,\n  StyledForm,\n  InputWrap,\n  StyledLabel,\n  StyledInput,\n  FormButton,\n  ErrorMessage,\n  SignWrap,\n  SignText,\n  SignLink,\n} from './Forms.styled';\n\nimport { createUser } from '../../redux/auth/authOperations';\n\nimport { registrationSchema } from '../../helpers/validationSchema';\n\nexport function SignupForm() {\n  const dispatch = useDispatch();\n  // const navigate = useNavigate();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm({\n    defaultValues: { name: '', email: '', password: '' },\n    resolver: yupResolver(registrationSchema),\n  });\n\n  const onSubmit = ({ name, email, password }) => {\n    dispatch(createUser({ name, email, password }))\n      .unwrap()\n      .then(() => toast.success('Account successfully created!'))\n      .catch(e =>\n        e === 'Request failed with status code 400'\n          ? toast.error('This user already exist! Use Log In button')\n          : toast.error('Something went wrong, try one nore time!')\n      );\n    reset();\n    // navigate('/contacts', { replace: true });\n  };\n\n  return (\n    <Container>\n      <Title>Sign Up</Title>\n      <StyledForm onSubmit={handleSubmit(onSubmit)}>\n        <InputWrap>\n          <StyledLabel htmlFor=\"name\">Name</StyledLabel>\n          <StyledInput\n            {...register('name')}\n            type=\"text\"\n            placeholder=\"Name\"\n            id=\"name\"\n          />\n          <ErrorMessage>{errors.name?.message}</ErrorMessage>\n        </InputWrap>\n        <InputWrap>\n          <StyledLabel htmlFor=\"email\">Email</StyledLabel>\n          <StyledInput\n            {...register('email')}\n            type=\"email\"\n            placeholder=\"Email\"\n            id=\"email\"\n          />\n          <ErrorMessage>{errors.email?.message}</ErrorMessage>\n        </InputWrap>\n        <InputWrap>\n          <StyledLabel htmlFor=\"password\">Password</StyledLabel>\n          <StyledInput\n            {...register('password')}\n            type=\"password\"\n            placeholder=\"Password\"\n            id=\"password\"\n          />\n          <ErrorMessage>{errors.password?.message}</ErrorMessage>\n        </InputWrap>\n        <FormButton type=\"submit\">Sign Up</FormButton>\n      </StyledForm>\n      <SignWrap>\n        <SignText>Already have account?</SignText>\n        <SignLink to=\"/login\">Log In</SignLink>\n      </SignWrap>\n      <Toaster />\n    </Container>\n  );\n}\n","import { SignupForm } from '../components/Forms/SignupForm';\nimport { FormDecor } from '../components/FormDecor/FormDecor';\n\nfunction Signup() {\n  return (\n    <FormDecor>\n      <SignupForm />\n    </FormDecor>\n  );\n}\n\nexport default Signup;\n"],"names":["Container","styled","StyledContainer","backgroundImage","FormDecor","children","Colors","Title","StyledForm","InputWrap","StyledInput","StyledLabel","ErrorMessage","ForgotButton","Link","FormButton","Transition","SignWrap","SignText","SignLink","registrationSchema","yup","shape","name","matches","required","email","password","min","loginSchema","number","SignupForm","dispatch","useDispatch","useForm","defaultValues","resolver","yupResolver","register","handleSubmit","errors","formState","reset","onSubmit","createUser","unwrap","then","toast","catch","e","htmlFor","type","placeholder","id","message","to"],"sourceRoot":""}